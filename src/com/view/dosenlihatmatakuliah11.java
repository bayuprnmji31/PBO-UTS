/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.view;

import com.model.Mahasiswa;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bayu Purnama Aji
 */
public final class dosenlihatmatakuliah11 extends javax.swing.JFrame {
    public Mahasiswa mahasiswa;
    public String nim;
    public String pw;


    /**
     * Creates new form lihatmatakuliah1
     * @param mahasiswa
     * @throws java.sql.SQLException
     */
    public dosenlihatmatakuliah11(Mahasiswa mahasiswa) throws SQLException {
        this.mahasiswa =mahasiswa;
        initComponents();
        tampil();
    }
    
    public dosenlihatmatakuliah11(String nim,String pw) throws SQLException {
        this.nim = nim;
        this.pw = pw;
        initComponents();
        tampil();
    }
    
    

    private void tampil() throws SQLException {
        DefaultTableModel modelmhs = (DefaultTableModel) tampilmk.getModel();
        modelmhs.setRowCount(0);
        String nimMahasiswa = this.nim;
        String tableName = "krs_" + nimMahasiswa;

        try {
            try ( 
                 Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/krs1", "root", "")) {
                
                String selectDataQuery = String.format("SELECT * FROM %s", tableName);
                PreparedStatement preparedStatement = con.prepareStatement(selectDataQuery);
                ResultSet resultSet = preparedStatement.executeQuery();
                
                while (resultSet.next()) {
                    String kodeMK = resultSet.getString("Kode_MK");
                    String namaMK = resultSet.getString("Nama_MK");
                    String sks1 = resultSet.getString("SKS");
                    String semester = resultSet.getString("Semester");
                    String praktikum = resultSet.getString("Praktikum");
                    String dosenNIP = resultSet.getString("Dosen_NIP");
                    String status1 = resultSet.getString("Status");

                    modelmhs.addRow(new Object[]{kodeMK, namaMK, sks1, semester, praktikum, dosenNIP,status1});
                }
            }
        } catch (SQLException e) {
    }
}
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tampilmk = new javax.swing.JTable();
        kembali = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tampilmk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kode MK", "Nama MK", "SKS", "Semester", "Praktikum", "Dosen Pengajar", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tampilmk);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 670, 260));

        kembali.setText("KEMBALI");
        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });
        getContentPane().add(kembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 390, 120, 50));

        hapus.setText("SETUJUI");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });
        getContentPane().add(hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 350, 120, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/component_ui/Login (14).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        try {
            new homekrsdosen(null).setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(dosenlihatmatakuliah11.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
    }//GEN-LAST:event_kembaliActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
                                      
    String tableName = "krs_" + this.nim;

try {
    try (Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/krs1", "root", "")) {
        int selectedRow = tampilmk.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris di tabel terlebih dahulu.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        } else {
            String kodeMK = tampilmk.getValueAt(selectedRow, 0).toString();
            
            
            String checkExistingQuery = String.format("SELECT COUNT(*) FROM %s WHERE Kode_MK = ? AND Status = 0", tableName);
            PreparedStatement checkExistingStatement = connection.prepareStatement(checkExistingQuery);
            checkExistingStatement.setString(1, kodeMK);
            ResultSet resultSet = checkExistingStatement.executeQuery();
            resultSet.next();
            int count = resultSet.getInt(1);

            if (count > 0) {
                
                String updateStatusQuery = String.format("UPDATE %s SET Status = 1 WHERE Kode_MK = ?", tableName);
                PreparedStatement updateStatusStatement = connection.prepareStatement(updateStatusQuery);
                updateStatusStatement.setString(1, kodeMK);
                int rowsUpdated = updateStatusStatement.executeUpdate();
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Mata kuliah dengan kode " + kodeMK + " disetujui.", "Pemberitahuan", JOptionPane.INFORMATION_MESSAGE);
                    tampil();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Mata kuliah dengan kode " + kodeMK + " tidak ditemukan atau sudah disetujui.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            }
        }
    }
} catch (SQLException e) {
    e.printStackTrace();
    System.out.println("Gagal menyimpan data ke tabel " + tableName);
    JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menyimpan data.", "Kesalahan", JOptionPane.ERROR_MESSAGE);
}

                                    

    }//GEN-LAST:event_hapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dosenlihatmatakuliah11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dosenlihatmatakuliah11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dosenlihatmatakuliah11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dosenlihatmatakuliah11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new dosenlihatmatakuliah11(null).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(dosenlihatmatakuliah11.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kembali;
    private javax.swing.JTable tampilmk;
    // End of variables declaration//GEN-END:variables
}
